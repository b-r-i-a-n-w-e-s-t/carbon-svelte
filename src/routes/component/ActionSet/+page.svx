<script lang="ts">
  import ActionSet from '$lib/ActionSet.svelte'
  import { Edit, TrashCan, User } from 'carbon-icons-svelte'
  import ExampleBox from '../../lib/ExampleBox.svelte'
</script>

## ActionSet

An ActionSet is the set of buttons at the top of a [Card](card), [Panel](panel), or [ColumnList](columnlist). Typically this component will not be used by itself but instead used indirectly by using one of the other components. Rather than repeating the same options in those other components it is documented here.

  - [Basic Example](#basicexample)
  - [Max Buttons Setting](#maxbuttons)
  - [Props](#props)

---

### <a id="basicexample"></a> Basic Example

At a minimum, the `actions` property must be defined.

```svelte
<script lang="ts">
  import { ActionSet } from '@txstate-mws/carbon-svelte'
  import { Edit, TrashCan, User } from 'carbon-icons-svelte'
</script>

<ActionSet actions={
  [
    {
      label: 'Edit',
      icon: Edit,
      href: '#basicexample'
    }, {
      label: 'Delete',
      icon: TrashCan,
      disabled: true
    }, {
      label: 'Manage Users',
      icon: User,
      onClick: () => { alert('Manage Users') }
    }
  ]
}/>
```

<ExampleBox>
  <ActionSet actions={
    [
      {
        label: 'Edit',
        icon: Edit,
        href: '#basicexample'
      }, {
        label: 'Delete',
        icon: TrashCan,
        disabled: true
      }, {
        label: 'Manage Users',
        icon: User,
        onClick: () => { alert('Manage Users') }
      }
    ]
  }/>
</ExampleBox>

---

### <a id="maxbuttons"></a> Max Buttons Setting

More of the actions can be displayed before a ... menu is created by using maxButtons. Be aware that this needs to be a number and not a string so if you hard-code a value use `{}` to keep TypeScript happy.

**NOTE: Typically this will be the responsibility of the component enclosing the ActionSet and is not expected to be set during typical app development. If you find youself needing to set it when a parent component does not, consult the maintainer of this library.**

```svelte
<ActionSet maxButtons={3} actions={[...]}/>
```

<ExampleBox>
  <ActionSet maxButtons={3} actions={
    [
      {
        label: 'Edit',
        icon: Edit,
        href: '#basicexample'
      }, {
        label: 'Delete',
        icon: TrashCan,
        disabled: true
      }, {
        label: 'Manage Users',
        icon: User,
        onClick: () => { alert('Manage Users') }
      }
    ]
  }/>
</ExampleBox>

---

### <a id="props"></a> Props

  - ***actions*** `ActionItem[]` *required* -- An array of actions to include. These will be rendered differently depending on the context and on other properties provided.
    - ***label*** `String` *required* -- A text label to describe the action. This will be shown unless an icon is also provided or ***includeLabels*** is `true`, in which case it becomes a pop-under label on hover.
    - ***icon*** `CarbonIcon` *optional* -- An icon as exported by [carbon-icons-svelte](https://carbon-icons-svelte.onrender.com/).
    - ***href*** `String` *optional* -- URL to navigate to after activating this action.
    - ***onClick*** `() => void | Promise<void>` *optional* -- Handler function to call when this action is activated.
    - ***disabled*** `Boolean` *optional, default `false`* -- If `true` this action will be visually greyed out, aria-disabled, unactivatable, and the cursor will change on rollover to indicate it is unusable. It will however still be able to receive focus, so that screen readers will still read it while also indicating it is not usable.
  - ***noPrimaryAction*** `Boolean` *optional, default `false`* -- If `true` none of the actions will be highlighted with the primary color.
  - ***forceOverflow*** `Boolean` *optional, default `false`* -- If `true` the ... button containing the menu of actions will be shown and contain all actions, regardless of how many actions are present or what the setting of ***maxButtons*** is. This is similar to `maxButtons={1}` except that even if only one action is present it will still be placed in a ... menu.
  - ***maxButtons*** `Number` *optional, default `2`* -- The most buttons to show before collapsing additional actions into a ... menu. This number includes the ... menu itself.
  - ***light*** `Boolean` *optional, default `false`* --
  - ***includeLabels*** `Boolean` *optional, default `false`* --
  - ***small*** `Boolean` *optional, default `false`* --
  - ***large*** `Boolean` *optional, default `false`* --
  - ***describedById*** `String` *optional* --
